services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
      - api03
    network_mode: host
    restart: unless-stopped

  api01: &api
    build: .
    command: /main -port 8081
    environment:
      - DATABASE_URI="postgresql://postgres:password@localhost:5432/postgres"
      - DRIVER="postgres"
      - PORT:":8081"
    expose:
      - 8081
    depends_on:
      - db
    network_mode: host
    restart: unless-stopped

  api02:
    <<: *api
    command: /main -port 8083
    environment:
      - PORT:":8081"
    expose:
      - 8082

  api03:
    <<: *api
    command: /main -port 8082
    environment:
      - PORT:":8081"
    expose:
      - 8082

  db:
    image: postgres:15-alpine
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - database:/var/lib/postgresql/data/

volumes:
  database:
    driver: local

networks:
  app_network:
    driver: bridge
